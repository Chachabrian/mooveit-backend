services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-metabase-db.sh:/docker-entrypoint-initdb.d/init-metabase-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  go-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - PORT=8080
      - BASE_URL=http://34.28.181.36:8080/api
      - GIN_MODE=release
      - AT_API_KEY=atsk_1b57803c1c0b358a847983f05e56c3db08864fb38aaead5332edddf47c287a75b395ec6c
      - AT_USERNAME=MooveIt_KE
      - EMAIL_PASSWORD=ojtx esuf bizk slbh
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - EMAIL_FROM=mooveitlimited@gmail.com
    ports:
      - "8080:8080"
    volumes:
      - uploads_data:/app/uploads

  # Commenting out Metabase service
  # metabase:
  #   image: metabase/metabase:latest
  #   container_name: metabase
  #   restart: always
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     MB_DB_TYPE: postgres
  #     MB_DB_DBNAME: metabase
  #     MB_DB_PORT: 5432
  #     MB_DB_USER: ${DB_USER}
  #     MB_DB_PASS: ${DB_PASSWORD}
  #     MB_DB_HOST: postgres
  #     JAVA_TIMEZONE: Africa/Nairobi
  #     JAVA_OPTS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
  #     MB_ENCRYPTION_SECRET_KEY: UqHJzl1rBN3FSL2p4keudxY5DI7KaGMm
  #   healthcheck:
  #     test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #     start_period: 2m
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   volumes:
  #     - metabase_data:/metabase-data

volumes:
  postgres_data:
  uploads_data:
  # metabase_data:
