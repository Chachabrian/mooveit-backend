services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: always
    profiles: ["db", "full"]
    environment:
      POSTGRES_USER: ${DB_USER:-mooveit_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-mooveit_password}
      POSTGRES_DB: ${DB_NAME:-mooveit_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init-metabase-db.sh:/docker-entrypoint-initdb.d/init-metabase-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-mooveit_user} -d ${DB_NAME:-mooveit_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mooveit-network

  redis:
    image: redis:7-alpine
    container_name: redis-cache
    restart: always
    profiles: ["app", "redis", "full"]
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mooveit-network

  go-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-app
    restart: always
    profiles: ["app", "full"]
    depends_on:
      - redis
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - PORT=${PORT:-8080}
      - BASE_URL=${BASE_URL}
      - GIN_MODE=${GIN_MODE:-release}
      - AT_API_KEY=${AT_API_KEY}
      - AT_USERNAME=${AT_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - EMAIL_FROM=${EMAIL_FROM}
      - JWT_SECRET=${JWT_SECRET}
      - FIREBASE_SERVICE_ACCOUNT_PATH=./firebase/serviceAccountKey.json
      # AWS S3 Configuration
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
    ports:
      - "${PORT:-8080}:8080"
    volumes:
      - ./uploads:/app/uploads
      - ./firebase:/app/firebase:ro
    networks:
      - mooveit-network

  metabase:
    image: metabase/metabase:latest
    container_name: metabase
    restart: always
    profiles: ["metabase", "full"]
    ports:
      - "3000:3000"
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: ${DB_PORT:-5432}
      MB_DB_USER: ${DB_USER:-mooveit_user}
      MB_DB_PASS: ${DB_PASSWORD:-mooveit_password}
      MB_DB_HOST: ${DB_HOST:-postgres}
      JAVA_TIMEZONE: Africa/Nairobi
      JAVA_OPTS: "-XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0"
      MB_ENCRYPTION_SECRET_KEY: ${MB_ENCRYPTION_SECRET_KEY:-UqHJzl1rBN3FSL2p4keudxY5DI7KaGMm}
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 2m
    depends_on:
      - postgres
    volumes:
      - metabase_data:/metabase-data
    networks:
      - mooveit-network

networks:
  mooveit-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  uploads_data:
  metabase_data:
